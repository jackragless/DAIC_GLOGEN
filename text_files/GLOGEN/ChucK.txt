===GLOGEN GLOSSARY===

|1| readability : The property of being capable of being read; legibility.
|2| natively : Pertaining to the computer or architecture in question; without the use of emulation, etc.
|3| modifying : present participle of modify; Altering.
|4| concurrent : Happening at the same time; simultaneous.
|5| left-to-right : That is written (and is read) from left to right. Healthy, sane, competent.
|6| semantics : The study of the relationship between words and their meanings.
|7| MIDI : A computerized music file in the MIDI format.
|8| HID : Initialism of human interface device.
|9| Spectral : Spectral is a 2016 American military science fiction action film directed by Nic Mathieu.
|10| IO : Initialism of input and output.
|11| infinite loop : A loop which continues indefinitely.
|12| uniqueness : The state or quality of being unique or one of a kind.
|13| live coding : A performing art based on the writing of source code and the use of interactive programming in an improvised way, for example to create audiovisual effects.
|14| FLOSS : Abbreviation of free/libre/open source software.

===DOCUMENT BODY===

ChucK is a concurrent, strongly timed audio programming language for real-time synthesis, composition, and performance,
which runs on Linux, Mac OS X, Microsoft Windows, and iOS. It is designed to favor readability|1| and flexibility for the programmer over other considerations such as raw performance. It natively|2| supports deterministic concurrency and multiple, simultaneous, dynamic control rates. Another key feature is the ability to live code; adding, removing, and modifying|3| code on the fly, while the program is running, without stopping or restarting. It has a highly precise timing/concurrency model, allowing for arbitrarily fine granularity. It offers composers and researchers a powerful and flexible programming tool for building and experimenting with complex audio synthesis programs, and real-time interactive control.ChucK was created and chiefly designed by Ge Wang as a graduate student working with Perry R. Cook.  ChucK is distributed freely under the terms of the GNU General Public License on Mac OS X, Linux and Microsoft Windows. On iPhone and iPad, ChiP (ChucK for iPhone) is distributed under a limited, closed source license, and is not currently licensed to the public. However, the core team has stated that it would like to explore "ways to open ChiP by creating a beneficial environment for everyone".


== Language features ==
The ChucK programming language is a loosely C-like object-oriented language, with strong static typing.
ChucK is distinguished by the following characteristics:
Direct support for real-time audio synthesis
A powerful and simple concurrent|4| programming model
A unified timing mechanism for multi-rate event and control processing.
A language syntax that encourages left-to-right|5| syntax and semantics|6| within program statements.
Precision timing:  a strongly timed sample-synchronous timing model.
Programs are dynamically compiled to ChucK virtual machine bytecode.
A runtime environment that supports on-the-fly programming.
The ChucK Operator (=>) that can be used in several ways to "chuck" any ordered flow of data from left to right.ChucK standard libraries provide:

MIDI|7| input and output.
Open Sound Control support.
HID|8| connectivity.
Unit generators (UGens) - ie oscillators, envelopes, synthesis toolkit ugens, filters, etc.
Unit analyzers (UAnae) - blocks that perform analysis functions on audio signals and/or metadata input, and produce metadata analysis results as output - ie FFT/IFFT, Spectral|9| Flux/Centroid, RMS, etc.
Serial IO|10| capabilitie|11|s - ie Arduino.
File IO capabilities.


== Code example ==
The following is a simple ChucK program that generates sound and music:

 // our signal graph (patch)
 SinOsc f => dac;
 // set gain
 .3 => f.gain;
 // an array of pitch classes (in half steps)
 [ 0, 2, 4, 6, 9, 10 ] @=> int hi[];
 
 // infinite loop
 while( true )
 {
     // choose a note, shift registers, convert to frequency
     Std.mtof( 65 + Std.rand2(0,1) * 43 +
         hi[Std.rand2(0,hi.cap()-1)] ) => f.freq;
 
     // advance time by 120 ms
     120::ms => now;
 }


== Uses ==
ChucK has been used in performances by the Princeton Laptop Orchestra (PLOrk) and for developing Smule applications, including their ocarina emulator. PLOrk organizers attribute some of the uniqueness|12| of their performances to the live coding|13| they can perform with ChucK.


== See also ==

Comparison of audio synthesis environments
Sonic Pi
Pure Data


== References ==


== Further reading ==


== External links ==
ChucK homepage at Princeton University
ChucK mirror at Stanford University
ChucK FLOSS|14| manual